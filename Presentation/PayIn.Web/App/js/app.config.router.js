'use strict';

// **********************
// Config for the router
// **********************
angular.module('app')
	.run(
	['$rootScope', '$state', '$stateParams',
		function ($rootScope, $state, $stateParams) {
			$rootScope.$state = $state;
			$rootScope.$stateParams = $stateParams;
		}
	]
	)
	.config(
	['$stateProvider', '$urlRouterProvider',
		function ($stateProvider, $urlRouterProvider) {
			$urlRouterProvider
				.otherwise('');

            $stateProvider
                .state('app1', { url: '', templateUrl: '/Home/Deals' })
                .state('app2', { url: '/', templateUrl: '/Home/Deals' })
                //PublicAccessControl
                .state('accesscontrolpublic', { url: '/AccessControl/Public/{id}', templateUrl: 'AccessControl/Public' })
                .state('accesscontrolmupi', { url: '/AccessControl/Mupi/{id}', templateUrl: 'AccessControl/Mupi' })
                .state('accesscontrolpublicweather', { url: '/AccessControl/Weather/{id}', templateUrl: 'Weather' })
                .state('accesscontrolpublicinfo', { url: '/AccessControl/Info', templateUrl: 'Info' })
                .state('accesscontrolpubliclanguage', { url: '/AccessControl/Language', templateUrl: 'Language' })
                //AccessControl
                .state('accesscontrolgetall', { url: '/AccessControl', templateUrl: 'AccessControl' })
                .state('accesscontrolcreate', { url: '/AccessControl/Create/{id}', templateUrl: 'AccessControl/Create' })
                .state('accesscontrolupdate', { url: '/AccessControl/Update/{id}', templateUrl: 'AccessControl/Update' })
                .state('accesscontroldelete', { url: '/AccessControl/Delete/{id}', templateUrl: 'AccessControl/Delete' })
                .state('accesscontrolentryreset', { url: '/AccessControl/Reset/{id}', templateUrl: 'AccessControl/Reset' })
                .state('accesscontrolweather', { url: '/AccessControl/Weather/{id}', templateUrl: 'AccessControl/Weather' })
                .state('accesscontrolinfo', { url: '/AccessControl/Info', templateUrl: 'AccessControl/Info' })
                .state('accesscontrolplaces', { url: '/AccessControl/Places/{id}', templateUrl: 'AccessControl/Places' })
                .state('accesscontrolentry', { url: '/AccessControl/Entry/{id}', templateUrl: 'AccessControl/Entry', params: { accessControlId: 0 } })
                //AccessControlEntrance
                .state('accesscontrolentrancegetall', { url: '/AccessControl/Entrance', templateUrl: 'AccessControlEntrance', params: { accessControlId: 0 } })
                .state('accesscontrolentrancecreate', { url: '/AccessControl/Entrance/Create/{id}', templateUrl: 'AccessControlEntrance/Create', params: { accessControlId: 0 } })
                .state('accesscontrolentranceupdate', { url: '/AccessControl/Entrance/Update/{id}', templateUrl: 'AccessControlEntrance/Update' })
                .state('accesscontrolentrancedelete', { url: '/AccessControl/Entrance/Delete/{id}', templateUrl: 'AccessControlEntrance/Delete' })
                //Account 
                .state('accountcurrent', { url: '/Account/Current', templateUrl: 'Home/Deals' })
                .state('accountdeleteimage', { url: '/Account/DeleteImage/{id}', templateUrl: 'Account/DeleteImage' })
                .state('accountimagecrop', { url: '/Account/ImageCrop', templateUrl: 'Account/ImageCrop' })
                .state('accountoverwritepassword', { url: '/Account/OverwritePassword/{id}', templateUrl: 'Account/OverwritePassword' })
                .state('accountupdate', { url: '/Account/Update/{id}', templateUrl: 'Account/Update' })
                .state('accountusers', { url: '/Account/GetUsers', templateUrl: 'Account/GetUsers' })
                .state('accountunlockuser', { url: '/Account/UnlockUser/{id}', templateUrl: 'Account/UnlockUser' })
                // CampaignLine
                .state('campaignlinecreateimage', { url: '/CampaignLine/CreateImage/{id}', templateUrl: 'CampaignLine/CreateImage' })
                .state('campaignlineimagecrop', { url: '/CampaignLine/ImageCrop', templateUrl: 'CampaignLine/ImageCrop' })
                .state('campaignlinecreate', { url: '/CampaignLine/Create/{id}', templateUrl: 'CampaignLine/Create' })
                .state('campaignlinedelete', { url: '/CampaignLine/Delete/{id}', templateUrl: 'CampaignLine/Delete' })
                .state('campaignlinegetall', { url: '/CampaignLine/{id}', templateUrl: 'CampaignLine' })
                .state('campaignlineupdate', { url: '/CampaignLine/Update/{id}', templateUrl: 'CampaignLine/Update' })
                .state('campaignlinegetbyproduct', { url: '/CampaignLine/Product/{id}', templateUrl: 'CampaignLine/GetByProduct', params: { id: 0 } })
                .state('campaignlineaddproduct', { url: 'CampaignLine/AddProduct/{id}', templateUrl: 'CampaignLine/AddProduct' })
                .state('campaignlineremoveproduct', { url: '/CampaignLine/RemoveProduct/{id}', templateUrl: 'CampaignLine/RemoveProduct' })
                .state('campaignlinegetbyproductfamily', { url: '/CampaignLine/ProductFamily/{id}', templateUrl: 'CampaignLine/GetByProductFamily', params: { id: 0 } })
                .state('campaignlineaddproductfamily', { url: 'CampaignLine/AddProductFamily/{id}', templateUrl: 'CampaignLine/AddProductFamily' })
                .state('campaignlineremoveproductfamily', { url: '/CampaignLine/RemoveProductFamily/{id}', templateUrl: 'CampaignLine/RemoveProductFamily' })
                .state('campaignlinegetbyserviceuser', { url: '/CampaignLine/ServiceUser/{id}', templateUrl: 'CampaignLine/GetByServiceUser', params: { id: 0 } })
                .state('campaignlineaddserviceuser', { url: 'CampaignLine/AddServiceUser/{id}', templateUrl: 'CampaignLine/AddServiceUser' })
                .state('campaignlineremoveserviceuser', { url: '/CampaignLine/RemoveServiceUser/{id}', templateUrl: 'CampaignLine/RemoveServiceUser' })
                .state('campaignlinegetbyservicegroup', { url: '/CampaignLine/ServiceGroup/{id}', templateUrl: 'CampaignLine/GetByServiceGroup', params: { id: 0 } })
                .state('campaignlineaddservicegroup', { url: 'CampaignLine/AddServiceGroup/{id}', templateUrl: 'CampaignLine/AddServiceGroup' })
                .state('campaignlineremoveservicegroup', { url: '/CampaignLine/RemoveServiceGroup/{id}', templateUrl: 'CampaignLine/RemoveServiceGroup' })
                .state('campaignlinegetbyentrancetype', { url: '/CampaignLine/EntranceType/{id}', templateUrl: 'CampaignLine/GetByEntranceType', params: { id: 0 } })
                .state('campaignlineaddentrancetype', { url: 'CampaignLine/AddEntranceType/{id}', templateUrl: 'CampaignLine/AddEntranceType' })
                .state('campaignlineremoveentrancetype', { url: '/CampaignLine/RemoveEntranceType/{id}', templateUrl: 'CampaignLine/RemoveEntranceType' })
                //Campaign
                .state('campaigngetall', { url: '/Campaign', templateUrl: 'Campaign' })
                .state('campaigncreate', { url: '/Campaign/Create', templateUrl: 'Campaign/Create', params: { paymentConcessionId: 0 } })
                .state('campaignupdate', { url: '/Campaign/Update/{id}', templateUrl: 'Campaign/Update' })
                .state('campaigndelete', { url: '/Campaign/Delete/{id}', templateUrl: 'Campaign/Delete' })
                .state('campaignsuspend', { url: '/Campaign/Suspend/{id}', templateUrl: 'Campaign/Suspend' })
                .state('campaignunsuspend', { url: '/Campaign/Unsuspend/{id}', templateUrl: 'Campaign/Unsuspend' })
                .state('campaigncreateimage', { url: '/Campaign/CreateImage/{id}', templateUrl: 'Campaign/CreateImage' })
                .state('campaignimagecrop', { url: '/Campaign/ImageCrop', templateUrl: 'Campaign/ImageCrop' })
                .state('campaigngetevent', { url: '/Campaign/EventList/{id}', templateUrl: 'Campaign/EventList' })
                .state('campaignaddevent', { url: '/Campaign/AddEvent/{id}', templateUrl: 'Campaign/AddEvent' })
                .state('campaignremoveevent', { url: '/Campaign/RemoveEvent/{id}', templateUrl: 'Campaign/RemoveEvent' })
                // ControlForm
                .state('controlformargumentslist', { url: '/ControlForm/Arguments/:id', templateUrl: 'ControlForm/Arguments' })
                .state('controlformcreate', { url: '/ControlForm/Create', templateUrl: 'ControlForm/Create' })
                .state('controlformdelete', { url: '/ControlForm/Delete/{id}', templateUrl: 'ControlForm/Delete' })
                .state('controlformgetall', { url: '/ControlForm', templateUrl: 'ControlForm' })
                .state('controlformupdate', { url: '/ControlForm/Update/{id}', templateUrl: 'ControlForm/Update' })
                // ControlFormArgument
                .state('controlformargumentgetform', { url: '/ControlFormArgument/Form/{formId}', templateUrl: 'ControlFormArgument/Form' })
                .state('controlformargumentcreate', { url: '/ControlFormArgument/Create/{formId}', templateUrl: 'ControlFormArgument/Create' })
                .state('controlformargumentupdate', { url: '/ControlFormArgument/Update/{id}', templateUrl: 'ControlFormArgument/Update' })
                .state('controlformargumentdelete', { url: '/ControlFormArgument/Delete/{id}', templateUrl: 'ControlFormArgument/Delete' })
                //ControlFormOption
                .state('controlformoptiongetall', { url: '/ControlFormOption', templateUrl: 'ControlFormOption', params: { id: 0 } })
                //.state('controlformoptioncreate', { url: '/ControlFormOption/Create/{id}', templateUrl: 'ControlFormOption/Create' })
                .state('controlformoptioncreate', { url: '/ControlFormOption/Create/{id}', templateUrl: 'ControlFormOption/Create', params: { id: 0 } })
                .state('controlformoptiondelete', { url: '/ControlFormOption/Delete/{id}', templateUrl: 'ControlFormOption/Delete' })
                .state('controlformoptionupdate', { url: '/ControlFormOption/Update/{id}', templateUrl: 'ControlFormOption/Update' })
                // ControlFormAssign
                .state('controlformassigncreate', { url: '/ControlFormAssign/Create/{checkId}', templateUrl: 'ControlFormAssign/Create' })
                .state('controlformassignupdate', { url: '/ControlFormAssign/Update/{id}', templateUrl: 'ControlFormAssign/Update' })
                .state('controlformassigndelete', { url: '/ControlFormAssign/Delete/{id}', templateUrl: 'ControlFormAssign/Delete' })
                .state('controlformassigngetcheck', { url: '/ControlFormAssign/Check/{checkId}', templateUrl: 'ControlFormAssign/Check' })
                .state('controlformassignform', { url: '/ControlFormAssign/ViewCompleteForm/{checkId}', templateUrl: 'ControlFormAssign/ViewCompleteForm' })
                // ControlFormAssignTemplate
                .state('controlformassigntemplatecreate', { url: '/ControlFormAssignTemplate/Create/{checkId}', templateUrl: 'ControlFormAssignTemplate/Create' })
                .state('controlformassigntemplateupdate', { url: '/ControlFormAssignTemplate/Update/{id}', templateUrl: 'ControlFormAssignTemplate/Update' })
                .state('controlformassigntemplatedelete', { url: '/ControlFormAssignTemplate/Delete/{id}', templateUrl: 'ControlFormAssignTemplate/Delete' })
                .state('controlformassigntemplategetcheck', { url: '/ControlFormAssignTemplate/Check/{checkId}', templateUrl: 'ControlFormAssignTemplate/Check' })
                // ControlFormAssignCheckPoint
                .state('controlformassigncheckpointcreate', { url: '/ControlFormAssignCheckPoint/Create/{checkId}', templateUrl: 'ControlFormAssignCheckPoint/Create' })
                .state('controlformassigncheckpointupdate', { url: '/ControlFormAssignCheckPoint/Update/{id}', templateUrl: 'ControlFormAssignCheckPoint/Update' })
                .state('controlformassigncheckpointdelete', { url: '/ControlFormAssignCheckPoint/Delete/{id}', templateUrl: 'ControlFormAssignCheckPoint/Delete' })
                .state('controlformassigncheckpointgetcheck', { url: '/ControlFormAssignCheckPoint/Check/{checkId}', templateUrl: 'ControlFormAssignCheckPoint/Check' })
                // ControlItem
                .state('controlitemgetall', { url: '/ControlItem', templateUrl: 'ControlItem' })
                .state('controlitemcreate', { url: '/ControlItem/Create', templateUrl: 'ControlItem/Create' })
                .state('controlitemupdate', { url: '/ControlItem/Update/{id}', templateUrl: 'ControlItem/Update' })
                .state('controlitemdelete', { url: '/ControlItem/Delete/{id}', templateUrl: 'ControlItem/Delete' })
                .state('controlitemaddtag', { url: '/ControlItem/AddTag/{id}', templateUrl: 'ControlItem/AddTag' })
                .state('controlitemremovetag', { url: '/ControlItem/RemoveTag', templateUrl: 'ControlItem/RemoveTag' })
                // ControlPlanning
                .state('controlplanningclear', { url: '/ControlPlanning/Clear/{workerId}', templateUrl: 'ControlPlanning/Clear' })
                .state('controlplanningcreate', { url: '/ControlPlanning/Create/{workerId}', templateUrl: 'ControlPlanning/Create' })
                .state('controlplanningcreatecheck', { url: '/ControlPlanning/CreateCheck/{workerId}', templateUrl: 'ControlPlanning/CreateCheck' })
                .state('controlplanningcreatetemplate', { url: '/ControlPlanning/CreateTemplate/{workerId}', templateUrl: 'ControlPlanning/CreateTemplate' })
                .state('controlplanningdelete', { url: '/ControlPlanning/Delete/{id}', templateUrl: 'ControlPlanning/Delete' })
                .state('controlplanningupdate', { url: '/ControlPlanning/Update/{id}', templateUrl: 'ControlPlanning/Update' })
                .state('controlplanninggetall', { url: '/ControlPlanning/{workerId}', templateUrl: 'ControlPlanning' })
                // ControlPlanningCheck
                .state('controlplanningcheckcreate', { url: '/ControlPlanningCheck/Create/{workerId}', templateUrl: 'ControlPlanningCheck/Create' })
                .state('controlplanningcheckdelete', { url: '/ControlPlanningCheck/Delete/{id}', templateUrl: 'ControlPlanningCheck/Delete' })
                .state('controlplanningcheckget', { url: '/ControlPlanningCheck/{id}', templateUrl: 'ControlPlanningCheck/View' })
                .state('controlplanningcheckupdate', { url: '/ControlPlanningCheck/Update/{id}', templateUrl: 'ControlPlanningCheck/Update' })
                // ControlPlanningItem
                .state('controlplanningitemcreate', { url: '/ControlPlanningItem/Create/{workerId}', templateUrl: 'ControlPlanningItem/Create' })
                .state('controlplanningitemdelete', { url: '/ControlPlanningItem/Delete/{id}', templateUrl: 'ControlPlanningItem/Delete' })
                .state('controlplanningitemupdate', { url: '/ControlPlanningItem/Update/{id}', templateUrl: 'ControlPlanningItem/Update' })
                // ControlPresence
                .state('controlpresencegetall', { url: '/ControlPresence', templateUrl: 'ControlPresence' })
                .state('controlpresencelegacy', { url: '/ControlPresence/Legacy', templateUrl: 'ControlPresence/Legacy' })
                .state('controlpresencecreate', { url: '/ControlPresence/Create', templateUrl: 'ControlPresence/Create' })
                .state('controlpresenceupdate', { url: '/ControlPresence/Update/{id}', templateUrl: 'ControlPresence/Update' })
                .state('controlpresencedelete', { url: '/ControlPresence/Delete/{id}', templateUrl: 'ControlPresence/Delete' })
                .state('controlpresencegethours', { url: '/ControlPresence/Graph/{workerId}', templateUrl: 'ControlPresence/Graph' })
                // ControlTemplate
                .state('controltemplategetall', { url: '/ControlTemplate', templateUrl: 'ControlTemplate' })
                .state('controltemplatecreate', { url: '/ControlTemplate/Create', templateUrl: 'ControlTemplate/Create' })
                .state('controltemplateupdate', { url: '/ControlTemplate/Update/{id}', templateUrl: 'ControlTemplate/Update' })
                .state('controltemplatedelete', { url: '/ControlTemplate/Delete/{id}', templateUrl: 'ControlTemplate/Delete' })
                // ControlTemplateItem
                .state('controltemplateitemgettemplate', { url: '/ControlTemplateItem/Template/{templateId}', templateUrl: 'ControlTemplateItem/Template' })
                .state('controltemplateitemcreate', { url: '/ControlTemplateItem/Create/{templateId}', templateUrl: 'ControlTemplateItem/Create' })
                .state('controltemplateitemupdate', { url: '/ControlTemplateItem/Update/{id}', templateUrl: 'ControlTemplateItem/Update' })
                .state('controltemplateitemdelete', { url: '/ControlTemplateItem/Delete/{id}', templateUrl: 'ControlTemplateItem/Delete' })
                // ControlTemplateCheck
                .state('controltemplatecheckcreate', { url: '/ControlTemplateCheck/Create/{templateId}', templateUrl: 'ControlTemplateCheck/Create' })
                .state('controltemplatecheckdelete', { url: '/ControlTemplateCheck/Delete/{id}', templateUrl: 'ControlTemplateCheck/Delete' })
                .state('controltemplatecheckupdate', { url: '/ControlTemplateCheck/Update/{id}', templateUrl: 'ControlTemplateCheck/Update' })
                .state('controltemplatecheckgettemplate', { url: '/ControlTemplateCheck/Template/{templateId}', templateUrl: 'ControlTemplateCheck/Template' })
                // ControlTrack				
                .state('controltrackgetall', { url: '/ControlTrack', templateUrl: 'ControlTrack' })
                .state('controltrackget', { url: '/ControlTrack/{id}', templateUrl: 'ControlTrack/View' })
                .state('controltrackgetitem', { url: '/ControlTrack/Item/{itemId}', templateUrl: 'ControlTrack/Item' })
                //Home
                .state('homepopup', { url: '/Home/Popup/{id}', templateUrl: '/Home/Popup' })
                //Liquidation																                 
                .state('liquidationgetall', { url: '/Liquidation', templateUrl: 'Liquidation' })
                .state('liquidationcreate', { url: '/Liquidation/Create', templateUrl: 'Liquidation/Create', params: { since: '', until: '', eventId: 0, concessionId: 0, filterByEvent: false, filter: '' } })
                .state('liquidationcreateandpay', { url: '/Liquidation/createandpay/{id}', templateUrl: '/Liquidation/CreateAndPay' })
                .state('liquidationchange', { url: '/Liquidation/Change', templateUrl: '/Liquidation/Change' })
                .state('liquidationopen', { url: '/Liquidation/Open', templateUrl: '/Liquidation/Open', params: { id: 0, total: 0 } })
                .state('liquidationclose', { url: '/Liquidation/Close', templateUrl: '/Liquidation/Close', params: { id: 0, total: 0 } })
                .state('liquidationpay', { url: '/Liquidation/Pay/{id}', templateUrl: '/Liquidation/Pay' })
                .state('liquidationcreateaccountlines', { url: '/Liquidation/CreateAccountLines', templateUrl: '/Liquidation/CreateAccountLines', params: { lines: []}})
                .state('liquidationaddaccountlines', { url: '/Liquidation/AddAccountLines/{id}', templateUrl: '/Liquidation/AddAccountLines', params: { lines: [] } })
                .state('liquidationremoveaccountlines', { url: '/Liquidation/RemoveAccountLines/{id}', templateUrl: '/Liquidation/RemoveAccountLines', params: { id: 0, accountLine: 0, typeName: '' } })
                // AccountLine
                .state('accountlinegetbyliquidation', { url: '/AccountLine/Liquidation/{id}', templateUrl: 'AccountLine/Liquidation' })
                .state('accountlinegetbylogbook', { url: '/AccountLine/LogBook', templateUrl: 'AccountLine/LogBook' })
                .state('accountlinegetbyaccounts', { url: '/AccountLine/Accounts', templateUrl: 'AccountLine/Accounts' })
                .state('accountlinegetbycash', { url: '/AccountLine/Cash', templateUrl: 'AccountLine/Cash' })
                .state('accountlinegetbyservicecards', { url: '/AccountLine/ServiceCards', templateUrl: 'AccountLine/ServiceCards' })
                .state('accountlinegetbycreditcards', { url: '/AccountLine/CreditCards', templateUrl: 'AccountLine/CreditCards' })
                .state('accountlinegetbyproducts', { url: '/AccountLine/Products', templateUrl: 'AccountLine/Products' })
                .state('accountlinegetbyentrancetypes', { url: '/AccountLine/EntranceTypes', templateUrl: 'AccountLine/EntranceTypes' })
                .state('accountlinegetbyothers', { url: '/AccountLine/Others', templateUrl: 'AccountLine/Others' })
                //Payment																		             
                .state('paymentgetpaymentsbycard', { url: '/Payment/CardPayments/{id}', templateUrl: 'Payment/CardPayments' })
                .state('paymentgetall', { url: '/Payment', templateUrl: 'Payment' })
                .state('paymentgetcharges', { url: '/Payment/Charges', templateUrl: 'Payment/Charges' })
                .state('paymentrefundpopup', { url: '/Payment/Refund/{id}', templateUrl: 'Payment/Refund' })
                .state('paymentpaymentdetails', { url: '/Payment/PaymentDetails/{id}', templateUrl: 'Payment/PaymentDetails' })
                .state('liquidationpayments', { url: '/Payment/LiquidationPayments/{concessionId}/{liquidationId}', templateUrl: 'Payment/LiquidationPayments' })
                .state('liquidationnull', { url: '/Payment/LiquidationPayment', templateUrl: 'Payment/LiquidationNull' })
                .state('paymentgraph', { url: '/Payment/Graph', templateUrl: 'Payment/Graph' })
                .state('paymentunliquidated', { url: '/Payment/Unliquidated', templateUrl: 'Payment/Unliquidated' })
                //PaymentConcession
                .state('paymentconcessiongetall', { url: '/PaymentConcession', templateUrl: 'PaymentConcession' })
                .state('paymentconcessioncreate', { url: '/PaymentConcession/Create', templateUrl: 'PaymentConcession/Create' })
                .state('paymentconcessioncommercecreate', { url: '/PaymentConcession/CreateCommerce', templateUrl: 'PaymentConcession/CreateCommerce' })
                .state('paymentconcessionupdate', { url: '/PaymentConcession/Update/{id}', templateUrl: 'PaymentConcession/Update' })
                .state('paymentconcessionupdatecommerce', { url: '/PaymentConcession/UpdateCommerce/{id}', templateUrl: 'PaymentConcession/UpdateCommerce' })
                .state('paymentconcessioncreateimage', { url: '/PaymentConcession/CreateImage/{id}', templateUrl: 'PaymentConcession/CreateImage' })
                .state('paymentconcessionimagecrop', { url: '/PaymentConcession/ImageCrop', templateUrl: 'PaymentConcession/ImageCrop' })
                .state('paymentconcessionbannerimagecrop', { url: '/PaymentConcession/BannerImageCrop', templateUrl: 'PaymentConcession/BannerImageCrop' })
                .state('paymentconcessionafilliatecreate', { url: '/PaymentConcession/Afilliate/{systemcardId}', templateUrl: 'PaymentConcession/Afilliate' })
                //PaymentConcessionCampaign
                .state('paymentconcessioncampaigngetall', { url: '/Companies/{id}', templateUrl: 'PaymentConcessionCampaign' })
                .state('paymentconcessioncampaigncreate', { url: '/Companies/Create/{id}', templateUrl: 'PaymentConcessionCampaign/Create' })
                .state('paymentconcessioncampaigndelete', { url: '/Companies/Delete{id}', templateUrl: 'PaymentConcessionCampaign/Delete' })
                .state('paymentconcessioncampaignresendnotification', { url: '/Companies/{id}', templateUrl: 'PaymentConcessionCampaign/ResendNotification' })
                //PaymentConcessionPurse
                .state('paymentconcessionpursegetall', { url: '/DetailsPurse/{id}', templateUrl: 'PaymentConcessionPurse' })
                .state('paymentconcessionpursedelete', { url: '/DetailsPurse/Delete/{id}', templateUrl: 'PaymentConcessionPurse/Delete' })
                .state('paymentconcessionpurseresendnotification', { url: '/DetailsPurse/ResendNotification/{id}', templateUrl: 'PaymentConcessionPurse/ResendNotification' })
                .state('paymentconcessionpursecreate', { url: '/DetailsPurse/Add/{id}', templateUrl: 'PaymentConcessionPurse/Create' })
                //PaymentUser
                .state('paymentusergetall', { url: '/Clients', templateUrl: 'PaymentUser' })
                .state('paymentusercreate', { url: '/Clients/Create', templateUrl: 'PaymentUser/Create' })
                .state('paymentuserupdate', { url: '/Clients/Update/{id}', templateUrl: 'PaymentUser/Update' })
                .state('paymentuserdelete', { url: '/Clients/Delete/{id}', templateUrl: 'PaymentUser/Delete' })
                .state('paymentuserresendnotification', { url: '/Clients/{id}', templateUrl: 'PaymentUser/ResendNotification' })
                //Promotion
                .state('promotiongetall', { url: '/Promotions', templateUrl: 'Promotion' })
                .state('promotiongetallconcession', { url: '/Promotions/Concession', templateUrl: 'Promotion/GetAllConcession' })
                .state('promotioncreate', { url: '/Promotions/Create', templateUrl: 'Promotion/Create' })
                .state('promotiondelete', { url: '/Promotions', templateUrl: 'Promotion/Delete' })
                .state('promotionviewcode', { url: '/Promotions/ViewCode/{id}', templateUrl: 'Promotion/ViewCode' })
                .state('promotionaddcode', { url: '/Promotions/AddCode/{id}', templateUrl: 'Promotion/AddCode' })
                .state('promotionupdate', { url: '/Promotions/Update/{id}', templateUrl: 'Promotion/Update' })
                .state('promotionunlinkcode', { url: '/Promotions/UnlinkCode', templateUrl: 'Promotion/UnlinkCode' })
                //Purse
                .state('pursegetall', { url: '/Purses', templateUrl: 'Purse' })
                .state('pursecreate', { url: '/Purses/Create', templateUrl: 'Purse/Create' })
                .state('pursecreateimage', { url: '/Purse/CreateImage/{id}', templateUrl: 'Purse/CreateImage' })
                .state('pursedelete', { url: '/Purse/Delete/{id}', templateUrl: 'Purse/Delete' })
                .state('purseimagecrop', { url: '/Purse/ImageCrop', templateUrl: 'Purse/ImageCrop' })
                .state('purseimagecropcreate', { url: '/Purse/ImageCreate', templateUrl: 'Purse/ImageCropCreate' })
                .state('pursegetusers', { url: '/Purses/Users/{id}', templateUrl: 'Purse/Users' })
                .state('purseupdate', { url: '/Purse/Update/{id}', templateUrl: 'Purse/Update' })
                .state('pursedeleteimage', { url: '/Purse/DeleteImage', templateUrl: 'Purse/DeleteImage' })
                //Shipment
                .state('shipmentgetall', { url: '/Shipment', templateUrl: 'Shipment' })
                .state('shipmentcreate', { url: '/Shipment/Create', templateUrl: 'Shipment/Create' })
                .state('shipmentaddusers', { url: '/Shipment/AddUsers/{id}', templateUrl: 'Shipment/AddUsers' })
                .state('shipmentdelete', { url: '/Shipment/Delete/{id}', templateUrl: 'Shipment/Delete' })
                .state('shipmentupdate', { url: '/Shipment/Update/{id}', templateUrl: 'Shipment/Update' })
                .state('shipmentdetails', { url: '/Shipment/Details/{id}', templateUrl: 'Shipment/Details' })
                .state('shipmentticketdelete', { url: '/Shipment/DeleteTicket/{ticketId}', templateUrl: 'Shipment/DeleteTicket' })
                .state('shipmentreceiptgetall', { url: '/Shipment/Receipt', templateUrl: 'Shipment/Receipt' })
                //PaymentWorker
                .state('paymentworkergetall', { url: '/PaymentWorker', templateUrl: 'PaymentWorker' })
                .state('paymentworkercreate', { url: '/PaymentWorker/Create', templateUrl: 'PaymentWorker/Create' })
                .state('paymentworkergetallconcession', { url: '/PaymentWorker/Concession', templateUrl: 'PaymentWorker/Concession' })
                .state('paymentworkerdelete', { url: '/PaymentWorker/Delete/{id}', templateUrl: 'PaymentWorker/Delete' })
                .state('paymentworkerdissociateconcession', { url: '/PaymentWorker/DissociateConcession/{id}', templateUrl: 'PaymentWorker/DissociateConcession' })
                .state('paymentworkerresendnotification', { url: '/PaymentWorker/{id}', templateUrl: 'PaymentWorker/ResendNotification' })
                // ServiceAddress
                .state('serviceaddressgetall', { url: '/ServiceAddress', templateUrl: 'ServiceAddress' })
                .state('serviceaddresscreate', { url: '/ServiceAddress/Create', templateUrl: 'ServiceAddress/Create' })
                .state('serviceaddressdelete', { url: '/ServiceAddress/Delete/{id}', templateUrl: 'ServiceAddress/Delete' })
                .state('serviceaddresscreatename', { url: '/ServiceAddress/CreateName/{id}', templateUrl: 'ServiceAddress/CreateName' })
                .state('serviceaddressdeletename', { url: '/ServiceAddress/DeleteName/{id}', templateUrl: 'ServiceAddress/DeleteName' })
                .state('serviceaddressupdatename', { url: '/ServiceAddress/UpdateName/{id}', templateUrl: 'ServiceAddress/UpdateName' })
                // ServiceCheckPoint
                .state('servicecheckpointgetitemchecks', { url: '/ServiceCheckPoint/Item/{itemId}', templateUrl: 'ServiceCheckPoint/Item' })
                .state('servicecheckpointdelete', { url: '/ServiceCheckPoint/Delete/{id}', templateUrl: 'ServiceCheckPoint/Delete' })
                .state('servicecheckpointadditem', { url: '/ServiceCheckPoint/AddItem/{id}', templateUrl: 'ServiceCheckPoint/AddItem' })
                .state('servicecheckpointcreate', { url: '/ServiceCheckPoint/Create?itemId', templateUrl: 'ServiceCheckPoint/Create' })
                .state('servicecheckpointcreatecheckpoint', { url: '/ServiceCheckPoint/CreateCheckPoint', templateUrl: 'ServiceCheckPoint/CreateCheckPoint' })
                .state('servicecheckpointupdate', { url: '/ServiceCheckPoint/Update/{id}', templateUrl: 'ServiceCheckPoint/Update' })
                //ServiceConcession
                .state('serviceconcessiongetall', { url: '/ServiceConcession', templateUrl: 'ServiceConcession' })
                .state('serviceconcessiongetstate', { url: '/ServiceConcession/States', templateUrl: '/ServiceConcession/States' })
                .state('serviceconcessionupdatestate', { url: '/ServiceConcession/UpdateState', templateUrl: '/ServiceConcession/UpdateState' })
                .state('serviceconcessionupdate', { url: '/ServiceConcession/Update/{id}', templateUrl: 'ServiceConcession/Update' })
                .state('serviceconcessionupdatecommerce', { url: '/ServiceConcession/UpdateCommerce/{id}', templateUrl: 'ServiceConcession/UpdateCommerce' })
                .state('serviceconcessiondelete', { url: '/ServiceConcession/Delete/{id}', templateUrl: 'ServiceConcession/Delete' })
                .state('serviceconcessioncreateimage', { url: '/ServiceConcession/CreateImage/{id}', templateUrl: 'ServiceConcession/CreateImage' })
                .state('serviceconcessionimagecrop', { url: '/ServiceConcession/ImageCrop', templateUrl: 'ServiceConcession/ImageCrop' })
                // ServiceFreeDays
                .state('servicefreedaysgetall', { url: '/ServiceFreeDays', templateUrl: 'ServiceFreeDays' })
                .state('servicefreedayscreate', { url: '/ServiceFreeDays/Create', templateUrl: 'ServiceFreeDays/Create' })
                .state('servicefreedaysupdate', { url: '/ServiceFreeDays/Update/{id}', templateUrl: 'ServiceFreeDays/Update' })
                .state('servicefreedaysdelete', { url: '/ServiceFreeDays/Delete/{id}', templateUrl: 'ServiceFreeDays/Delete' })
                // ServicePrice
                .state('servicepricegetall', { url: '/ServicePrice', templateUrl: 'ServicePrice' })
                .state('servicepricecreate', { url: '/ServicePrice/Create/{id}', templateUrl: 'ServicePrice/Create' })
                .state('servicepriceupdate', { url: '/ServicePrice/Update/{id}', templateUrl: 'ServicePrice/Update' })
                .state('servicepricedelete', { url: '/ServicePrice/Delete/{id}', templateUrl: 'ServicePrice/Delete' })
                //ServiceSupplier
                .state('servicesuppliergetall', { url: '/Concessions', templateUrl: 'ServiceSupplier' })
                .state('servicesupplierupdate', { url: '/Concession/Update/{id}', templateUrl: 'ServiceSupplier/Update' })
                // ServiceTag
                .state('servicetaggetall', { url: '/ServiceTag', templateUrl: 'ServiceTag' })
                .state('servicetagcreate', { url: '/ServiceTag/Create', templateUrl: 'ServiceTag/Create' })
                .state('servicetagdelete', { url: '/ServiceTag/Delete/{id}', templateUrl: 'ServiceTag/Delete' })
                .state('servicetagupdate', { url: '/ServiceTag/{id}', templateUrl: 'ServiceTag/Update' })
                // ServiceTimeTable
                .state('servicetimetablegetall', { url: '/ServiceTimeTable', templateUrl: 'ServiceTimeTable' })
                .state('servicetimetablecreate', { url: '/ServiceTimeTable/Create', templateUrl: 'ServiceTimeTable/Create' })
                .state('servicetimetabledelete', { url: '/ServiceTimeTable/Delete/{id}', templateUrl: 'ServiceTimeTable/Delete' })
                .state('servicetimetableupdate', { url: '/ServiceTimeTable/Update/{id}', templateUrl: 'ServiceTimeTable/Update' })
                //ServiceUser
                .state('serviceuserget', { url: '/ServiceUser/{id:int}', templateUrl: 'ServiceUser/View' })
                .state('serviceusergetall', { url: '/ServiceUser', templateUrl: 'ServiceUser' })
                .state('serviceusergetallbydashboard', { url: '/Dashboard', templateUrl: 'ServiceUser/Dashboard' })
                .state('serviceuserdelete', { url: '/ServiceUser/Delete/{id}', templateUrl: 'ServiceUser/Delete' })
				.state('serviceuserdetails', { url: '/ServiceUser/Details/{id}', templateUrl: 'ServiceUser/Details' })
				.state('serviceuserregister', { url: '/ServiceUser/Register/{id}', templateUrl: 'ServiceUser/Register' })
                .state('serviceusersubscribe', { url: '/ServiceUser/Subscribe/{id}', templateUrl: 'ServiceUser/Subscribe' })
                .state('serviceuserunsubscribe', { url: '/ServiceUser/Unsubscribe/{id}', templateUrl: 'ServiceUser/Unsubscribe' })
                .state('serviceuserupdate', { url: '/ServiceUser/Update/{id}', templateUrl: 'ServiceUser/Update' })
                .state('serviceusercreateimage', { url: '/ServiceUser/CreateImage/{id}', templateUrl: 'ServiceUser/CreateImage' })
                .state('serviceusercreatecardselect', { url: '/ServiceUser/CreateCardSelect', templateUrl: 'ServiceUser/CreateCardSelect' })
                .state('serviceuserimagecrop', { url: '/ServiceUser/ImageCrop', templateUrl: 'ServiceUser/ImageCrop' })
                .state('serviceuserupdatecard', { url: '/ServiceUser/UpdateCard/{id}', templateUrl: 'ServiceUser/UpdateCard', params: { uid: 0, cardState: 0, ownCard: false, newCard: false, newCardConcessionName: 0, ownerVatNumber: "", ownerName: "", ownerLastName: "" } })
                .state('serviceuserupdatecardselect', { url: '/ServiceUser/UpdateCardSelect/{id}', templateUrl: 'ServiceUser/UpdateCardSelect' })
                .state('serviceusercreate', { url: '/ServiceUser/Create', templateUrl: 'ServiceUser/Create' })
                .state('serviceuserservicegroups', { url: '/ServiceUser/ServiceGroups/{id}', templateUrl: 'ServiceUser/ServiceGroups' })
                .state('serviceuseraddservicegroup', { url: '/ServiceUser/AddServiceGroup/{id}', templateUrl: 'ServiceUser/AddServiceGroup' })
                .state('serviceuserremoveservicegroup', { url: '/ServiceUser/RemoveServiceGroup/{id}', templateUrl: 'ServiceUser/RemoveServiceGroup' })
                //ServiceCategory
                .state('servicecategorygetall', { url: '/ServiceCategory', templateUrl: 'ServiceCategory' })
                .state('servicecategorydelete', { url: '/ServiceCategory/Delete/{id}', templateUrl: 'ServiceCategory/Delete' })
                .state('servicecategoryupdate', { url: '/ServiceCategory/Update/{id}', templateUrl: 'ServiceCategory/Update' })
                .state('servicecategorycreate', { url: '/ServiceCategory/Create', templateUrl: 'ServiceCategory/Create' })
                //ServiceGroup
                .state('servicegroupgetall', { url: '/ServiceGroup', templateUrl: 'ServiceGroup' })
                .state('servicegroupdelete', { url: '/ServiceGroup/Delete/{id}', templateUrl: 'ServiceGroup/Delete' })
                .state('servicegroupupdate', { url: '/ServiceGroup/Update/{id}', templateUrl: 'ServiceGroup/Update' })
                .state('servicegroupcreate', { url: '/ServiceGroup/Create/{id}', templateUrl: 'ServiceGroup/Create' })
                .state('servicegroupadduser', { url: '/ServiceGroup/AddUser/{id}', templateUrl: 'ServiceGroup/AddUser' })
                //ServiceGroupServiceUsers
                .state('servicegroupserviceusersgetall', { url: '/ServiceGroupServiceUsers/{groupId}', templateUrl: 'ServiceGroupServiceUsers' })
                .state('servicegroupserviceusersdelete', { url: '/ServiceGroupServiceUsers/Delete/{id}', templateUrl: 'ServiceGroupServiceUsers/Delete' })
                .state('servicegroupserviceusersupdate', { url: '/ServiceGroupServiceUsers/Update/{id}', templateUrl: 'ServiceGroupServiceUsers/Update' })
                .state('servicegroupserviceuserscreate', { url: '/ServiceGroupServiceUsers/Create/{userId}', templateUrl: 'ServiceGroupServiceUsers/Create' })
                //Product
                .state('productgetall', { url: '/Product', templateUrl: 'Product' })
                .state('productcreate', { url: '/Product/Create/{id}', templateUrl: 'Product/Create' })
                .state('productupdate', { url: '/Product/Update/{id}', templateUrl: 'Product/Update' })
                .state('productdelete', { url: '/Product/Delete/{id}', templateUrl: 'Product/Delete' })
                .state('productcreateimage', { url: '/Product/CreateImage/{id}', templateUrl: 'Product/CreateImage' })
                .state('productimagecrop', { url: '/Product/ImageCrop', templateUrl: 'Product/ImageCrop' })
                .state('producthide', { url: '/Product/Hide/{id}', templateUrl: 'Product/Hide' })
                .state('productshow', { url: '/Product/Show/{id}', templateUrl: 'Product/Show' })
                .state('productvisibility', { url: '/Product/Visibility/{id}', templateUrl: 'Product/Visibility' })
                .state('productgetallbydashboard', { url: '/ProductDashboard', templateUrl: 'Product/ProductDashboard' })
                .state('productgroupsgetall', { url: '/Product/Groups/{id}', templateUrl: 'Product/Groups' })
                .state('productaddgroup', { url: '/Product/AddGroup/{id}', templateUrl: 'Product/AddGroup', params: { id: 0 } })
                .state('productremovegroup', { url: '/Product/RemoveGroup', templateUrl: 'Product/RemoveGroup', params: { id: 0, groupId: 0 } })
                //FamilyProduct
                .state('productfamilygetall', { url: '/ProductFamily', templateUrl: 'ProductFamily' })
                .state('productfamilycreate', { url: '/ProductFamily/Create/{id}', templateUrl: 'ProductFamily/Create' })
                .state('productfamilyupdate', { url: '/ProductFamily/Update/{id}', templateUrl: 'ProductFamily/Update' })
                .state('productfamilydelete', { url: '/ProductFamily/Delete/{id}', templateUrl: 'ProductFamily/Delete' })
                .state('productfamilycreateimage', { url: '/ProductFamily/CreateImage/{id}', templateUrl: 'ProductFamily/CreateImage' })
                .state('productfamilyimagecrop', { url: '/ProductFamily/ImageCrop', templateUrl: 'ProductFamily/ImageCrop' })
                .state('productfamilyhide', { url: '/ProductFamily/Hide/{id}', templateUrl: 'ProductFamily/Hide' })
                .state('productfamilyshow', { url: '/ProductFamily/Show/{id}', templateUrl: 'ProductFamily/Show' })
                //TicketIn Event
                .state('eventgetall', { url: '/Event', templateUrl: 'Event' })
                .state('eventcreate', { url: '/Event/Create/{id}', templateUrl: 'Event/Create' })
                .state('eventcreateimage', { url: '/Event/CreateImage/{id}', templateUrl: 'Event/CreateImage' })
                .state('eventimagecrop', { url: '/Event/ImageCrop', templateUrl: 'Event/ImageCrop' })
                .state('eventimagemenucrop', { url: '/Event/ImageMenuCrop', templateUrl: 'Event/ImageMenuCrop' })
                .state('eventdelete', { url: '/Event/Delete/{id}', templateUrl: 'Event/Delete' })
                .state('eventupdate', { url: '/Event/Update/{id}', templateUrl: 'Event/Update' })
                .state('eventhide', { url: '/Event/Hide/{id}', templateUrl: 'Event/Hide' })
                .state('eventshow', { url: '/Event/Show/{id}', templateUrl: 'Event/Show' })
                .state('eventvisibility', { url: '/Event/Visibility/{id}', templateUrl: 'Event/Visibility' })
                .state('eventsuspend', { url: '/Event/Suspend/{id}', templateUrl: 'Event/Suspend' })
                .state('eventunsuspend', { url: '/Event/Unsuspend/{id}', templateUrl: 'Event/Unsuspend' })
                .state('eventaddimagegallery', { url: '/Event/AddImage/', templateUrl: 'Event/AddImageGallery' })
                .state('eventdeleteimagegallery', { url: '/Event/DeleteImage/{id}', templateUrl: 'Event/DeleteImageGallery' })
                .state('eventcreatemapimage', { url: '/Event/CreateMapImage/{id}', templateUrl: 'Event/CreateMapImage' })
                .state('eventmapimagecrop', { url: '/Event/MapImageCrop', templateUrl: 'Event/MapImageCrop' })
                //Activity
                .state('activitygetall', { url: '/Activity', templateUrl: 'Activity', params: { id: 0, eventName: '' } })
                .state('activitycreate', { url: '/Activity/Create/{id}', templateUrl: 'Activity/Create', params: { id: 0 } })
                .state('activitydelete', { url: '/Activity/Delete/{id}', templateUrl: 'Activity/Delete' })
                .state('activityupdate', { url: '/Activity/Update/{id}', templateUrl: 'Activity/Update' })
                //Notice
                //.state('noticeaddrouteurl', { url: '/Notice/RouteUrl', templateUrl: 'Notice/RouteUrl' })
                .state('noticegetall', { url: '/Notice?{eventId}', templateUrl: 'Notice' })
                .state('noticegetpages', { url: '/Notice/Pages?{eventId}', templateUrl: 'Notice/Pages' })
                .state('noticegetedicts', { url: '/Notice/Edicts?{eventId}', templateUrl: 'Notice/Edicts' })
                .state('noticecreate', { url: '/Notice/Create', templateUrl: 'Notice/Create' })
                .state('noticecreatepage', { url: '/Notice/CreatePage', templateUrl: 'Notice/CreatePage' })
                .state('noticecreateedict', { url: '/Notice/CreateEdict', templateUrl: 'Notice/CreateEdict' })
                .state('noticedelete', { url: '/Notice/Delete/{id}', templateUrl: 'Notice/Delete' })
                .state('noticeupdate', { url: '/Notice/Update/{id}', templateUrl: 'Notice/Update' })
                .state('noticeupdatepage', { url: '/Notice/UpdatePage/{id}', templateUrl: 'Notice/UpdatePage' })
                .state('noticeupdateedict', { url: '/Notice/UpdateEdict/{id}', templateUrl: 'Notice/UpdateEdict' })
                .state('noticecreateimage', { url: '/Notice/CreateImage/{id}', templateUrl: 'Notice/CreateImage' })
                .state('noticeimagecrop', { url: '/Notice/ImageCrop', templateUrl: 'Notice/ImageCrop' })
                .state('noticehide', { url: '/Notice/Hide/{id}', templateUrl: 'Notice/Hide' })
                .state('noticeshow', { url: '/Notice/Show/{id}', templateUrl: 'Notice/Show' })
                .state('noticevisibility', { url: '/Notice/Visibility/{id}', templateUrl: 'Notice/Visibility' })
                //NotificationSet
                .state('notificationsetgetall', { url: '/NotificationSet', templateUrl: 'NotificationSet' })
                .state('notificationsetcreate', { url: '/NotificationSet/Create', templateUrl: 'NotificationSet/Create' })
                //ServiceNotification
                .state('servicenotificationgetall', { url: '/ServiceNotification', templateUrl: 'ServiceNotification' })
                //Enlaces para la Shop
                .state('shopgetall', { url: '/Shop', templateUrl: 'Shop' })
                .state('concessionevents', { url: '/Shop/Concession/{id}', templateUrl: '/Shop/Concession/' })
                //EntranceType
                .state('entrancetypegetall', { url: '/EntranceType ', templateUrl: 'EntranceType', params: { id: 0, eventName: '' } })
                .state('entrancetypegetsellable', { url: '/EntranceType/GetSellable', templateUrl: 'EntranceType/GetSellable', params: { cardId: 0 } })
                .state('entrancetypegetbuyable', { url: '/EntranceType/GetBuyable', templateUrl: 'EntranceType/GetBuyable', params: { cardId: 0 } })
                .state('entrancetypegettogive', { url: '/EntranceType/GetToGive', templateUrl: 'EntranceType/GetToGive', params: { cardId: 0 } })
                .state('entrancetyperecharge', { url: '/EntranceType/Recharge', templateUrl: 'EntranceType/Recharge', params: { cardId: 0 } })
                .state('entrancetypebuyrecharge', { url: '/EntranceType/BuyRecharge', templateUrl: 'EntranceType/BuyRecharge', params: { cardId: 0 } })
                .state('entrancetypedonate', { url: '/EntranceType/Donate', templateUrl: 'EntranceType/Donate', params: { cardId: 0 } })
                .state('entrancetypecreate', { url: '/EntranceType/Create/{id}', templateUrl: 'EntranceType/Create', params: { id: 0 } })
                .state('entrancetypecreateimage', { url: '/EntranceType/CreateImage/{id}', templateUrl: 'EntranceType/CreateImage' })
                .state('entrancetypeimagecrop', { url: '/EntranceType/ImageCrop', templateUrl: 'EntranceType/ImageCrop' })
                .state('entrancetypedelete', { url: '/EntranceType/Delete/{id}', templateUrl: 'EntranceType/Delete' })
                .state('entrancetyperelocate', { url: '/EntranceType/Relocate/{id}', templateUrl: 'EntranceType/Relocate' })
                .state('entrancetypeupdate', { url: '/EntranceType/Update/{id}', templateUrl: 'EntranceType/Update' })
                .state('entrancetypehide', { url: '/EntranceType/Hide/{id}', templateUrl: 'EntranceType/Hide' })
                .state('entrancetypeshow', { url: '/EntranceType/Show/{id}', templateUrl: 'EntranceType/Show' })
                .state('entrancetypevisibility', { url: '/EntranceType/Visibility/{id}', templateUrl: 'EntranceType/Visibility' })
                .state('entrancetypegroupsgetall', { url: '/EntranceType/Groups/{id}', templateUrl: 'EntranceType/Groups' })
                .state('entrancetypeaddgroup', { url: '/EntranceType/AddGroup/{id}', templateUrl: 'EntranceType/AddGroup', params: { id: 0 } })
                .state('entrancetyperemovegroup', { url: '/EntranceType/RemoveGroup', templateUrl: 'EntranceType/RemoveGroup', params: { id: 0, groupId: 0 } })
                // EntranceTypeForm
                .state('entrancetypeformgetall', { url: '/EntranceTypeForm', templateUrl: 'EntranceTypeForm', params: { id: 0 } })
                .state('entrancetypeformcreate', { url: '/EntranceTypeForm/Create/{entranceTypeId}', templateUrl: 'EntranceTypeForm/Create' })
                .state('entrancetypeformdelete', { url: '/EntranceTypeForm/Delete/{id}', templateUrl: 'EntranceTypeForm/Delete' })
                .state('entrancetypeformupdate', { url: '/EntranceTypeForm/Update/{id}', templateUrl: 'EntranceTypeForm/Update' })
                // Entrance
                .state('entrancegetall', { url: '/Entrance/{id}', templateUrl: 'Entrance' })
                .state('entranceinvite', { url: '/Entrance/Invite/{id}', templateUrl: 'Entrance/Invite' })
                .state('entrancevalidation', { url: '/Entrance/Validation/{code}', templateUrl: 'Entrance/Validation' })
                .state('generatePDF', { url: '/Entrance/Mail/{id}', templateUrl: 'Entrance/Mail' })
                .state('entranceticket', { url: '/Entrance/EntranceTicket/{id}', templateUrl: 'Entrance/EntranceTicket' })
                .state('entrancesuspend', { url: '/Entrance/Suspend/{id}', templateUrl: 'Entrance/Suspend' })
                .state('entranceunsuspend', { url: '/Entrance/Unsuspend/{id}', templateUrl: 'Entrance/Unsuspend' })
                .state('entrancechangecard', { url: '/Entrance/ChangeCard/{id}', templateUrl: 'Entrance/ChangeCard' })
                //EntranceFormValue
                .state('entranceformvaluegetall', { url: '/EntranceFormValue', templateUrl: 'EntranceFormValue', params: { id: 0 } })
                //Exhibitor
                .state('exhibitorgetall', { url: '/Exhibitor/{id}', templateUrl: 'Exhibitor', params: { id: 0, eventName: '' } })
                .state('exhibitorsuspend', { url: '/Exhibitor/Suspend/{id}', templateUrl: 'Exhibitor/Suspend' })
                .state('exhibitorunsuspend', { url: '/Exhibitor/Unsuspend/{id}', templateUrl: 'Exhibitor/Unsuspend' })
                .state('exhibitordelete', { url: '/Exhibitor/Delete/{id}', templateUrl: 'Exhibitor/Delete' })
                .state('exhibitorupdate', { url: '/Exhibitor/Update/{id}', templateUrl: 'Exhibitor/Update' })
                .state('exhibitorcreate', { url: '/Exhibitor/Create/{id}', templateUrl: 'Exhibitor/Create', params: { id: 0 } })
                //Check
                .state('checkgetall', { url: '/Check/{id}', templateUrl: 'Check' })

                //ServiceIncidence
                .state('serviceincidenceupdate', { url: '/ServiceIncidence/Update/{id:int}', templateUrl: 'ServiceIncidence/Update' })
                .state('serviceincidencegetall', { url: '/ServiceIncidence', templateUrl: 'ServiceIncidence' })

                //ServiceWorker
                .state('serviceworkergetall', { url: '/ServiceWorker', templateUrl: 'ServiceWorker' })
                .state('serviceworkergetcontrol', { url: '/ServiceWorker/Control', templateUrl: 'ServiceWorker/Control' })
                .state('serviceworkercreate', { url: '/ServiceWorker/Create', templateUrl: 'ServiceWorker/Create' })
                .state('serviceworkerupdate', { url: '/ServiceWorker/Update/{id}', templateUrl: 'ServiceWorker/Update' })
                .state('serviceworkerdelete', { url: '/ServiceWorker/Delete/{id}', templateUrl: 'ServiceWorker/Delete' })
                // Ticket
                .state('ticketgetall', { url: '/Ticket?{eventId}', templateUrl: 'Ticket' })
                .state('ticketsystemcard', { url: '/Ticket/SystemCard?{eventId}', templateUrl: 'Ticket/SystemCard' })
                .state('ticketcreate', { url: '/Ticket/Create', templateUrl: 'Ticket/CreateTicket' })
                .state('ticketupdate', { url: '/Ticket/Update/{id}', templateUrl: 'Ticket/Update' })
                .state('ticketdetails', { url: '/Ticket/Details/{id}', templateUrl: 'Ticket/Details' })
                .state('ticketpay', { url: '/Ticket/Pay/{id}', templateUrl: 'Ticket/Pay' })
                .state('ticketchargedetails', { url: '/Ticket/ChargeDetails/{id}', templateUrl: 'Ticket/ChargeDetails' })
                .state('ticketdetailsdelete', { url: '/Ticket/Delete/{id}', templateUrl: 'Ticket/Delete' })
                .state('ticketdeletedetail', { url: '/Ticket/DeleteDetail/:id', templateUrl: 'Ticket/DeleteDetail' })
                .state('ticketcreatedetail', { url: '/Ticket/CreateDetail/:id', templateUrl: 'Ticket/CreateDetail' })
                .state('ticketupdatedetail', { url: '/Ticket/UpdateDetail/:id', templateUrl: 'Ticket/UpdateDetail' })
                .state('ticketdonatebalance', { url: '/Ticket/DonateBalance', templateUrl: 'Ticket/DonateBalance', params: { paymentConcessionId: 0, amount: 0 } })
                .state('ticketgraph', { url: '/Ticket/Graph', templateUrl: 'Ticket/Graph' })
                .state('tickettemplatedetails', { url: '/TicketTemplate/Details/{id}', templateUrl: 'TicketTemplate/Details' })
                .state('tickettemplatecreate', { url: '/TicketTemplate/Create?ticketId', templateUrl: 'TicketTemplate/Create' })
                .state('tickettemplategetall', { url: '/TicketTemplate', templateUrl: 'TicketTemplate' })
                .state('tickettemplateupdate', { url: '/TicketTemplate/Update/:id?ticketId', templateUrl: 'TicketTemplate/Update' })
                .state('tickettemplatedelete', { url: '/TicketTemplate/Delete/{id}', templateUrl: 'TicketTemplate/Delete' })
                //Translation
                //.state('translationcreate', { url: '/TransportTitle', templateUrl: 'TransportTitle' })
                //.state('translationdelete', { url: '/Translation/Delete', templateUrl: 'Translation/Delete', params: { noticeNameId: 0, noticeDescriptionId: 0, noticeShortDescriptionId: 0, noticePlaceId: 0, eventNameId: 0, eventDescriptionId: 0, eventShortDescriptionId: 0, eventPlaceId: 0, eventConditionId: 0 } })
                //.state('translationupdate', { url: '/Translation/Update', templateUrl: 'Translation/Update', params: { noticeNameId: 0, noticeDescriptionId: 0, noticeShortDescriptionId: 0, noticePlaceId: 0, eventNameId: 0, eventDescriptionId: 0, eventShortDescriptionId: 0, eventPlaceId: 0, eventConditionId: 0 } })
                .state('translationcreate', { url: '/Translation/Create', templateUrl: 'Translation/Create', params: { noticeId: 0, eventId: 0, translationType: 0 } })
                .state('translationupdate', { url: '/Translation/Update/{id}', templateUrl: 'Translation/Update', params: { noticeId: 0, eventId: 0 } })
                //.state('translationupdate', { url: '/Translation/Update', templateUrl: 'Translation/Update', params: { id: 0 } })
                //.state('translationupdate', { url: '/Translation/Update', templateUrl: 'Translation/Update', params: { noticeId: 0, eventId: 0, translationType: 0, language: 0 } })
                .state('translationcreateformattedtext', { url: '/Translation/CreateFormattedText', templateUrl: 'Translation/CreateFormattedText', params: { noticeId: 0, eventId: 0, translationType: 0 } })
                .state('translationupdateformattedtext', { url: '/Translation/UpdateFormattedText/{id}', templateUrl: 'Translation/UpdateFormattedText', params: { noticeId: 0, eventId: 0 } })
                .state('translationdelete', { url: '/Translation/Delete/{id}', templateUrl: 'Translation/Delete', params: { noticeId: 0, eventId: 0 } })

                //TransportSystem
                .state('transportsystemgetall', { url: '/TransportSystem', templateUrl: 'TransportSystem' })
                .state('transportsystemcreate', { url: '/TransportSystem/Create', templateUrl: 'TransportSystem/Create' })
                .state('transportsystemdelete', { url: '/TransportSystem/Delete/{id}', templateUrl: 'TransportSystem/Delete' })
                //TransportCardSupport
                .state('transportcardsupportgetall', { url: '/TransportCardSupport', templateUrl: 'TransportCardSupport' })
                .state('transportcardsupportcreate', { url: '/TransportCardSupport/Create', templateUrl: 'TransportCardSupport/Create' })
                .state('transportcardsupportdelete', { url: '/TransportCardSupport/Delete/{id}', templateUrl: 'TransportCardSupport/Delete' })
                .state('transportcardsupportupdate', { url: '/TransportCardSupport/Update/{id}', templateUrl: 'TransportCardSupport/Update' })
                //TransportCardSupportTitleCompatibility
                .state('transportcardsupporttitlecompatibilitygetall', { url: '/TransportCardSupportTitleCompatibility/{titleId}', templateUrl: 'TransportCardSupportTitleCompatibility' })
                .state('transportcardsupporttitlecompatibilitycreate', { url: '/TransportCardSupportTitleCompatibility/Create/{titleId}', templateUrl: 'TransportCardSupportTitleCompatibility/Create' })
                .state('transportcardsupporttitlecompatibilitydelete', { url: '/TransportCardSupportTitleCompatibility/Delete/{id}', templateUrl: 'TransportCardSupportTitleCompatibility/Delete' })
                .state('transportcardsupporttitlecompatibilityupdate', { url: '/TransportCardSupportTitleCompatibility/Update/{id}', templateUrl: 'TransportCardSupportTitleCompatibility/Update' })
                //TransportSimultaneousTitleCompatibilities
                .state('transportsimultaneoustitlecompatibilitiesgetall', { url: '/TransportSimultaneousTitleCompatibilities/{titleId}', templateUrl: 'TransportSimultaneousTitleCompatibilities' })
                .state('transportsimultaneoustitlecompatibilitiescreate', { url: '/TransportSimultaneousTitleCompatibilities/Create/{titleId}', templateUrl: 'TransportSimultaneousTitleCompatibilities/Create' })
                .state('transportsimultaneoustitlecompatibilitiesdelete', { url: '/TransportSimultaneousTitleCompatibilities/Delete/{id}', templateUrl: 'TransportSimultaneousTitleCompatibilities/Delete' })
                .state('transportsimultaneoustitlecompatibilitiesupdate', { url: '/TransportSimultaneousTitleCompatibilities/Update/{id}', templateUrl: 'TransportSimultaneousTitleCompatibilities/Update' })
                //TransportPrice
                .state('transportpricecreate', { url: '/TransportPrice/Create/{titleId}', templateUrl: 'TransportPrice/Create' })
                .state('transportpricegetall', { url: '/TransportPrice/{titleId}', templateUrl: 'TransportPrice' })
                .state('transportpricedelete', { url: '/TransportPrice/Delete/{id}', templateUrl: 'TransportPrice/Delete' })
                .state('transportpriceupdate', { url: '/TransportPrice/Update/{id}', templateUrl: 'TransportPrice/Update' })
                //TransportTitle			
                .state('transporttitlegetall', { url: '/TransportTitle', templateUrl: 'TransportTitle' })
                .state('transporttitledelete', { url: '/TransportTitle/Delete/{id}', templateUrl: 'TransportTitle/Delete' })
                .state('transporttitlecreate', { url: '/TransportTitle/Create', templateUrl: 'TransportTitle/Create' })
                .state('transporttitleupdate', { url: '/TransportTitle/Update/{id}', templateUrl: 'TransportTitle/Update' })
                // TransportOperation
                .state('transportoperationgetall', { url: '/Transport/Operations', templateUrl: 'TransportOperation/Control' })
                .state('transportoperationdetails', { url: '/Transport/Operations/:id/:uid', templateUrl: 'TransportOperation' })
                //TransportValidation
                .state('transportvalidationgetall', { url: '/TransportValidation', templateUrl: 'TransportValidation' })
                //GreyList
                .state('greylistreadall', { url: '/GreyList/ReadAll/{id}', templateUrl: 'GreyList/ReadAll' })
                .state('greylistmodifyblock', { url: '/GreyList/ModifyBlock/{id}', templateUrl: 'GreyList/ModifyBlock' })
                .state('greylistgetall', { url: '/GreyList', templateUrl: 'GreyList' })
                .state('greylistdelete', { url: '/GreyList/Delete/{id}', templateUrl: 'GreyList/Delete' })
                //BlackList
                .state('blacklistgetall', { url: '/BlackList', templateUrl: 'BlackList' })
                .state('blacklistcreate', { url: '/BlackList/Create/{id}', templateUrl: 'BlackList/Create' })
                .state('blacklistdelete', { url: '/BlackList/Delete/{id}', templateUrl: 'BlackList/Delete' })
                //User
                .state('usercreatenotification', { url: '/User/CreateNotification', templateUrl: 'User/CreateNotification' })
                // ServiceCard
                .state('servicecardgetall', { url: '/ServiceCard', templateUrl: 'ServiceCard' })
                .state('servicecardgetall_mycards_prev', { url: '/ServiceCard/MyCardsPrev', templateUrl: 'ServiceCard/MyCardsPrev' })
                .state('servicecardgetall_mycards', { url: '/ServiceCard/MyCards', templateUrl: 'ServiceCard/MyCards' })
                .state('servicecardlink', { url: '/ServiceCard/Link', templateUrl: 'ServiceCard/Link' })
                //.state('entrancechangecard', { url: '/Entrance/ChangeCard/{id}', templateUrl: 'Entrance/ChangeCard' })
                .state('servicecardlinkcard', { url: '/ServiceCard/LinkCard/{id}', templateUrl: 'ServiceCard/LinkCard' })
                .state('servicecardunlink', { url: '/ServiceCard/UnlinkCard/{id}', templateUrl: 'ServiceCard/UnlinkCard' })
                .state('servicecardget', { url: '/ServiceCard/Item/{id}', templateUrl: 'ServiceCard/Item' })
                .state('servicecardcreate', { url: '/ServiceCard/Create', templateUrl: 'ServiceCard/Create' })
                .state('servicecardlock', { url: '/ServiceCard/Lock/{id}', templateUrl: 'ServiceCard/Lock' })
                .state('servicecardunlock', { url: '/ServiceCard/Unlock/{id}', templateUrl: 'ServiceCard/Unlock' })
                .state('servicecarddestroy', { url: '/ServiceCard/Destroy/{id}', templateUrl: 'ServiceCard/Destroy' })
                // SystemCard
                .state('systemcardgetall', { url: '/SystemCard', templateUrl: 'SystemCard' })
                .state('systemcardcreate', { url: '/SystemCard/Create', templateUrl: 'SystemCard/Create' })
                .state('systemcarddelete', { url: '/SystemCard/Delete/{id}', templateUrl: 'SystemCard/Delete' })
                .state('systemcardimagecrop', { url: '/SystemCard/ImageCrop', templateUrl: 'SystemCard/ImageCrop' })
                .state('systemcardupdate', { url: '/SystemCard/Update/{id}', templateUrl: 'SystemCard/Update' })
                // SystemCardMember
                .state('systemcardmembergetall', { url: '/SystemCardMember', templateUrl: 'SystemCardMember', params: { systemCardId: 0 } })
                .state('systemcardmembercreate', { url: '/SystemCardMember/Create', templateUrl: 'SystemCardMember/Create', params: { systemCardId: 0 } })
                .state('systemcardmemberdelete', { url: '/SystemCardMember/Delete/{id}', templateUrl: 'SystemCardMember/Delete' })
                .state('systemcardmemberlock', { url: '/SystemCardMember/Lock/{id}', templateUrl: 'SystemCardMember/Lock' })
                .state('systemcardmemberunlock', { url: '/SystemCardMember/Unlock/{id}', templateUrl: 'SystemCardMember/Unlock' })
                .state('systemcardmemberupdate', { url: '/SystemCardMember/Update/{id}', templateUrl: 'SystemCardMember/Update' })
                // ServiceCardBatch
                .state('servicecardbatchgetall', { url: '/ServiceCardBatch', templateUrl: 'ServiceCardBatch' })
                .state('servicecardbatchcreate', { url: '/ServiceCardBatch/Create', templateUrl: 'ServiceCardBatch/Create' })
                .state('servicecardbatchlock', { url: '/ServiceCardBatch/Lock/{id}', templateUrl: 'ServiceCardBatch/Lock' })
                .state('servicecardbatchunlock', { url: '/ServiceCardBatch/Unlock/{id}', templateUrl: 'ServiceCardBatch/Unlock' })
				.state('servicecardbatchdelete', { url: '/ServiceCardBatch/Delete/{id}', templateUrl: 'ServiceCardBatch/Delete' })
				// ServiceDocument
				.state('servicedocumentgetall', { url: '/ServiceDocument', templateUrl: 'ServiceDocument' })
				.state('servicedocumentdelete', { url: '/ServiceDocument/Delete/{id}', templateUrl: 'ServiceDocument/Delete' })
				.state('servicedocumentupdate', { url: '/ServiceDocument/Update/{id}', templateUrl: 'ServiceDocument/Update' })
				.state('servicedocumentcreate', { url: '/ServiceDocument/Create/{id}', templateUrl: 'ServiceDocument/Create' })
				// SmartCity
				.state('smartcitygetall', { url: '/SmartCity', templateUrl: 'SmartCity' })
				// SmartCity/Component
				.state('componentgetall', { url: '/SmartCity/Component/{deviceId}', templateUrl: 'SmartCity/Component' })
				// SmartCity/Device
				.state('devicegetall', { url: '/SmartCity/Device', templateUrl: 'SmartCity/Device' })
				// SmartCity/EnergyTariff
				.state('energytariffgetall', { url: '/SmartCity/EnergyTariff', templateUrl: 'SmartCity/EnergyTariff' })
				// SmartCity/Sensor
				.state('sensorgetall', { url: '/SmartCity/Sensor/{componentId}', templateUrl: 'SmartCity/Sensor' })
				.state('sensorgetenergy', { url: '/SmartCity/Sensor/Energy/{id}', templateUrl: 'SmartCity/Sensor/Energy' })
				.state('sensorgetinstantaneous', { url: '/SmartCity/Sensor/Instantaneous/{id}', templateUrl: 'SmartCity/Sensor/Instantaneous' })
				.state('sensorgetmaxenergy', { url: '/SmartCity/Sensor/MaxEnergy/{id}', templateUrl: 'SmartCity/Sensor/MaxEnergy' })
				.state('sensorgetperhour', { url: '/SmartCity/Sensor/PerHour/{id}', templateUrl: 'SmartCity/Sensor/PerHour' })
				.state('sensorgetpower', { url: '/SmartCity/Sensor/Power/{id}', templateUrl: 'SmartCity/Sensor/Power' })
                .state('sensorsettargetvalue', { url: '/SmartCity/Sensor/SetTargetValue/{id}', templateUrl: 'SmartCity/Sensor/SetTargetValue', params: {targetValue: 0} })
                .state('sensorremovetargetvalue', { url: '/SmartCity/Sensor/RemoveTargetValue/{id}', templateUrl: 'SmartCity/Sensor/RemoveTargetValue' })
				// JustMoney/PrepaidCard
				.state('prepaidcardactivate', { url: '/JustMoney/PrepaidCard/Activate/{id}', templateUrl: 'JustMoney/PrepaidCard/Activate' })
				.state('prepaidcardcreate', { url: '/JustMoney/PrepaidCard/Create', templateUrl: 'JustMoney/PrepaidCard/Create' })
				.state('prepaidcardgetall', { url: '/JustMoney/PrepaidCard', templateUrl: 'JustMoney/PrepaidCard' })
                // JustMoney/User
                .state('usergetall', { url: '/JustMoney/User', templateUrl: 'JustMoney/User' })
                .state('userupdate', { url: '/JustMoney/User/Update/{id}', templateUrl: 'JustMoney/User/Update' })
				// Bus/Graph
				.state('busgraphgetall', { url: '/Bus/Graph/{id}', templateUrl: 'Bus/Graph' })
				// Bus/Line
				.state('buslinegetall', { url: '/Bus/Line', templateUrl: 'Bus/Line' })
				.state('buslinegetitinerary', { url: '/Bus/Line/Itinerary/{id}', templateUrl: 'Bus/Line/Itinerary' })
				// Bus/Stop
                .state('busstopgetbyline', { url: '/Bus/Stop/ByLine/{id}', templateUrl: 'Bus/Stop/ByLine' })
                .state('busstopcreate', { url: '/Bus/Stop/Create', templateUrl: 'Bus/Stop/Create' })
                .state('busstopupdate', { url: '/Bus/Stop/Update/{id}', templateUrl: 'Bus/Stop/Update' })
                .state('busstopupdatelink', { url: '/Bus/Stop/UpdateLink/{id}', templateUrl: 'Bus/Stop/UpdateLink' })
				.state('busstopvisit', { url: '/Bus/Stop/Visit/{id}', templateUrl: 'Bus/Stop/Visit' })
				// Bus/Request
				.state('busrequestcreate', { url: '/Bus/Request/Create/{id}', templateUrl: 'Bus/Request/Create' })
				.state('busrequestdelete', { url: '/Bus/Request/Delete/{id}', templateUrl: 'Bus/Request/Delete' })
			;
		}
	]
);