@using PayIn.Application.Dto.SmartCity.Results;
@using PayIn.Web.App.Factories.SmartCity;

@using (Html.xpList(
	SensorFactory.GetEnergyName,
	SensorFactory.GetEnergyApi,
	"",
	"resources.smartCity.sensor.getEnergy",
	subtitle: "{{arguments.name}}",
	isTitleActive: true,
	init:
		"scope.id = params.id;" +
		"scope.arguments.period = 1;" +
		"scope.selectedGraph = 1;"
))
{
<div style="margin-top:-50px;">
	<div class="row">
		<!-- Periodo -->
		<div class="form-group col-md-3">
			<label for="period" class="control-label" translate="resources.smartCity.sensor.getEnergyPeriod">Periodo</label>
			<select id="period" name="period" class="form-control" ng-model="arguments.period">
				<option value="1" translate="resources.smartCity.sensor.getEnergyPeriodLast24h">Últimas 24h</option>
				<option value="2" translate="resources.smartCity.sensor.getEnergyPeriodDay">Dia específico</option>
			</select>
		</div>
		<!-- Desde -->
		<div class="form-group col-md-3">
			<label for="date" class="control-label ng-scope" translate="resources.smartCity.sensor.getEnergyDate">Desde</label>
			<div class="input-group date" xp-date="arguments.date">
				<input data-ng-model="value" id="date" name="date" type="text" class="form-control" autocomplete="off" ng-disabled="arguments.period!=2&&arguments.period!=4">
				<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
				<span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-md-3" style="margin-bottom: 10px">
			@*<div class="btn-group btn-group-justified" style="float:left">
				<a href="" class="btn btn-PayIn" style="border-color: #cfdadd;">Dia</a>
				<a ui-sref="sensorgetmaxenergy({id: {{id}} })" class="btn" style="border-color: #cfdadd;">Mes</a>
			</div>*@
		</div>
		<div class="col-md-3 col-md-offset-6" style="margin-bottom: 10px">
			<div class="btn-group btn-group-justified" style="float:right">
				<a href="" class="btn" style="border-color: #cfdadd;" ng-class="{'btn-PayIn':selectedGraph==1}" ng-click="selectedGraph=1">€</a>
				<a href="" class="btn" style="border-color: #cfdadd;" ng-class="{'btn-PayIn':selectedGraph==2}" ng-click="selectedGraph=2">kWh</a>
				<a href="" class="btn" style="border-color: #cfdadd;" ng-class="{'btn-PayIn':selectedGraph==3}" ng-click="selectedGraph=3">kg CO2</a>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-md-12">
			<div class="panel panel-default">
				<div class="panel-body">
					<div ng-if="selectedGraph==1">
						<xp-chart
							xp-model="data"
							xp-options='{
								"type": "bar",
								"scaleBeginAtZero": true,
								"legend": {
									"display": false
								}
							}'
							xp-x-axis='{
								"data": "label",
								"stacked": true
							}'
							xp-y-axis='{
								"unity": "€",
								"beginAtZero": true,
								"stacked": true
							}'
							xp-data='[
								{
									"name": "P1",
									"value": "p1ConsumptionCost",
									"fillTransparency": 0,
									"backgroundColor": "p1Color",
									"borderColor": "p1Color",
									"borderWidth": 2
								},
								{
									"name": "P2",
									"value": "p2ConsumptionCost",
									"fillTransparency": 0,
									"backgroundColor": "p2Color",
									"borderColor": "p2Color",
									"borderWidth": 2
								},
								{
									"name": "P3",
									"value": "p3ConsumptionCost",
									"fillTransparency": 0,
									"backgroundColor": "p3Color",
									"borderColor": "p3Color",
									"borderWidth": 2
								},
								{
									"type": "line",
									"value": "powerContractMinCost",
									"borderColor": "\"#aed6f1\"",
									"borderWidth": 2,
									"backgroundColor": "\"#aed6f1\"",
									"steppedLine": "after"
								},
								{
									"name": "Potencia contratada",
									"type": "line",
									"value": "powerContractCost - powerContractMinCost",
									"borderColor": "\"#85c1e9\"",
									"borderWidth": 2,
									"backgroundColor": "\"#aed6f1\"",
									"steppedLine": "after"
								},
								{
									"type": "line",
									"value": "powerContractMaxCost - powerContractCost",
									"borderColor": "\"#aed6f1\"",
									"borderWidth": 2,
									"backgroundColor": "\"#aed6f1\"",
									"fill": "-2",
									"steppedLine": "after"
								}
							]'>
						</xp-chart>
					</div>
					<div ng-if="selectedGraph==2">
						<xp-chart
							xp-model="data"
							xp-options='{
								"type": "bar",
								"scaleBeginAtZero": true,
								"legend": {
									"display": false
								}
							}'
							xp-data='[
								{
									"name": "P1",
									"value": "p1Consumption",
									"fillTransparency": 0,
									"backgroundColor": "p1Color",
									"borderColor": "p1Color",
									"borderWidth": 2
								},
								{
									"name": "P2",
									"value": "p2Consumption",
									"fillTransparency": 0,
									"backgroundColor": "p2Color",
									"borderColor": "p2Color",
									"borderWidth": 2
								},
								{
									"name": "P3",
									"value": "p3Consumption",
									"fillTransparency": 0,
									"backgroundColor": "p3Color",
									"borderColor": "p3Color",
									"borderWidth": 2
								},
								{
									"name": "Defecto potencia",
									"value": "powerLack",
									"fillTransparency": 0.7,
									"backgroundColor": "colorOver",
									"borderColor": "colorOver",
									"borderWidth": 2
								},
								{
									"name": "Exceso potencia",
									"value": "powerExcess",
									"fillTransparency": 0,
									"backgroundColor": "colorOver",
									"borderColor": "colorOver",
									"borderWidth": 2
								},
								{
									"type": "line",
									"value": "powerContractMin",
									"borderColor": "\"#aed6f1\"",
									"borderWidth": 2,
									"backgroundColor": "\"#aed6f1\""
								},
								{
									"name": "Potencia contratada",
									"type": "line",
									"value": "powerContract - powerContractMin",
									"borderColor": "\"#85c1e9\"",
									"borderWidth": 2,
									"backgroundColor": "\"#aed6f1\""
								},
								{
									"type": "line",
									"value": "powerContractMax - powerContract",
									"borderColor": "\"#aed6f1\"",
									"borderWidth": 2,
									"backgroundColor": "\"#aed6f1\"",
									"fill": "-2"
								}
							]'
							xp-x-axis='{
								"data": "label",
								"stacked": true
							}'
							xp-y-axis='{
								"unity": "kWh",
								"beginAtZero": true,
								"stacked": true
							}'>
						</xp-chart>
					</div>
					<div ng-if="selectedGraph==3">
						<xp-chart xp-model="data"
								  xp-options='{
								"type": "bar",
								"scaleBeginAtZero": true,
								"legend": {
									"display": false
								}
							}'
								  xp-x-axis='{
								"data": "label",
								"stacked": true
							}'
								  xp-y-axis='{
								"unity": "kg",
								"beginAtZero": true,
								"stacked": true
							}'
								  xp-data='[
								{
									"name": "CO2 P1",
									"value": "p1ConsumptionCO2",
									"fillTransparency": 0,
									"backgroundColor": "p1Color",
									"borderColor": "p1Color",
									"borderWidth": 2
								},
								{
									"name": "CO2 P2",
									"value": "p2ConsumptionCO2",
									"fillTransparency": 0,
									"backgroundColor": "p2Color",
									"borderColor": "p2Color",
									"borderWidth": 2
								},
								{
									"name": "CO2 P3",
									"value": "p3ConsumptionCO2",
									"fillTransparency": 0,
									"backgroundColor": "p3Color",
									"borderColor": "p3Color",
									"borderWidth": 2
								},
								{
									"name": "Exceso de CO2",
									"value": "consumptionOverCO2",
									"fillTransparency": 0.7,
									"backgroundColor": "colorOver",
									"borderColor": "colorOver",
									"borderWidth": 2
								}
							]'>
						</xp-chart>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="table-responsive">
		<table class="table table-hover">
			<thead>
				<tr>
					<th translate="resources.smartCity.sensor.timestamp">Timestamp</th>
					<th translate="resources.smartCity.sensor.value">Value</th>
					<th translate="resources.smartCity.sensor.cost">Cost</th>
				</tr>
			</thead>
			<tbody>
				<tr ng-repeat="item in data">
					<td>@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.Label))</td>
					<td>
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P1Consumption))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P2Consumption))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P3Consumption))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P4Consumption))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P5Consumption))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P6Consumption))
					</td>
					<td>
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P1ConsumptionCost))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P2ConsumptionCost))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P3ConsumptionCost))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P4ConsumptionCost))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P5ConsumptionCost))
						@(Html.ColumnFor<ApiSensorGetEnergyResult>(x => x.P6ConsumptionCost))
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</div>
}