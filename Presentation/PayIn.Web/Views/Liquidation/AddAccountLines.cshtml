@using PayIn.Application.Dto.Payments.Arguments;
@using PayIn.Web.App.Factories;

@using (Html.xpPopupPut(
    LiquidationFactory.AddAccountLinesName,
    LiquidationFactory.AddAccountLinesApi,
    "",
    "resources.liquidation.addAccountLines",
    init:
        "scope.arguments.lines = _.filter(scope.arguments.lines, function(item) { return item.selected == true; })",
    previous: "scope.id=scope.arguments.id;"
))
{
    <div class="panel panel-default" style="margin-top:-15px">
        <div class="panel-body">
            @(Html.SelectFor<LiquidationAddAccountLinesArguments>(x => x.Id, "Name", api: LiquidationFactory.SelectorOpenedApi, arguments: "{\"paymentConcessionId\":\"{{arguments.paymentConcessionId}}\"}"))
            <div data-ng-class="{'has-error':!form.liquidationId.$valid}" class="form-group col-md-12">
                <label for="liquidationId" class="control-label ng-scope" translate="resources.liquidation.accountLines">Account lines</label>
                <div class="input-group" style="width:100% !important;">
                    <ul>
                        <li ng-repeat="item in arguments.lines">{{item.date|xpDateTime}} {{item.typeName}}</li>
                    </ul>
                </div>
                <div ng-show="form.liquidationId.$error.required" class="ng-hide" style=""><span class="error control-label ng-scope" translate="LiquidationId">LiquidationId</span> <span class="error control-label ng-scope" translate="resources.globalResources.exceptionRequired">es requerido</span></div>
            </div>
        </div>
    </div>
}