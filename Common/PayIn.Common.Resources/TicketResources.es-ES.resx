<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Dirección</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Cantidad</value>
  </data>
  <data name="AmountIncomeTax" xml:space="preserve">
    <value>Impuesto sobre la renta</value>
  </data>
  <data name="AmountLimitException" xml:space="preserve">
    <value>No se permite transferir más de 9.999.999.999</value>
  </data>
  <data name="AmountTaxable" xml:space="preserve">
    <value>Base imponible</value>
  </data>
  <data name="AmountVat" xml:space="preserve">
    <value>IVA</value>
  </data>
  <data name="AmountWithoutCommission" xml:space="preserve">
    <value>Cantidad sin comisión</value>
  </data>
  <data name="Article" xml:space="preserve">
    <value>Artículo</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelado</value>
  </data>
  <data name="Capture" xml:space="preserve">
    <value>Captura</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>Número de tarjeta</value>
  </data>
  <data name="CardType" xml:space="preserve">
    <value>Tipo de tarjeta</value>
  </data>
  <data name="Charge" xml:space="preserve">
    <value>Cargo</value>
  </data>
  <data name="ChargedAmount" xml:space="preserve">
    <value>Cobrado</value>
  </data>
  <data name="ChargeDetails" xml:space="preserve">
    <value>Detalles del ticket</value>
  </data>
  <data name="Charges" xml:space="preserve">
    <value>Cobros</value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>Estadisticas</value>
  </data>
  <data name="CheckPin" xml:space="preserve">
    <value>Comprobar PIN</value>
  </data>
  <data name="CheckPinText" xml:space="preserve">
    <value>Si está seguro de que pagar la cantidad de {0} € a {1} , sólo tiene que introducir el PIN para el pago. ¿Estas seguro?</value>
  </data>
  <data name="Cif" xml:space="preserve">
    <value>CIF</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Ciudad</value>
  </data>
  <data name="Commerce" xml:space="preserve">
    <value>Comercio</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Crear</value>
  </data>
  <data name="CreateOra" xml:space="preserve">
    <value>Parkímetro</value>
  </data>
  <data name="CreateTicket" xml:space="preserve">
    <value>Crear tickets</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Moneda</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Fecha</value>
  </data>
  <data name="Deadline" xml:space="preserve">
    <value>Fecha limite</value>
  </data>
  <data name="DeadlineAprox" xml:space="preserve">
    <value>Fecha límite aproximada: {0}</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="DeleteQuestion" xml:space="preserve">
    <value>¿Está seguro de eliminar {0} de {1}€?</value>
    <comment>0 -&gt; title, 1 -&gt; amount</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Detalles</value>
  </data>
  <data name="DetailsReference" xml:space="preserve">
    <value>Referencia</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>Hora</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>No hay datos disponibles para la fecha seleccionada.</value>
  </data>
  <data name="NotPaid" xml:space="preserve">
    <value>No pagado</value>
  </data>
  <data name="NumberPlate" xml:space="preserve">
    <value>Número de matrícula</value>
  </data>
  <data name="Ora" xml:space="preserve">
    <value>Parkímetro</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Pagado</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Pagar</value>
  </data>
  <data name="Payin" xml:space="preserve">
    <value>Pay[in]</value>
  </data>
  <data name="PayinCommission" xml:space="preserve">
    <value>Pay[In] </value>
  </data>
  <data name="PaymentDetails" xml:space="preserve">
    <value>Detalles del pago</value>
  </data>
  <data name="PaymentId" xml:space="preserve">
    <value>Id del Pago</value>
  </data>
  <data name="PaymentMedia" xml:space="preserve">
    <value>Forma de pago</value>
  </data>
  <data name="Payments" xml:space="preserve">
    <value>Pagos</value>
  </data>
  <data name="Pin" xml:space="preserve">
    <value>PIN Pay[IN]</value>
  </data>
  <data name="PinException" xml:space="preserve">
    <value>Pago no autorizado. Pin Incorrecto</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Precio</value>
  </data>
  <data name="PriceCharged" xml:space="preserve">
    <value>Total cobrado</value>
  </data>
  <data name="Prices" xml:space="preserve">
    <value>Precios</value>
  </data>
  <data name="QrGenerate" xml:space="preserve">
    <value>Generar QR</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Cantidad</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Referencia</value>
  </data>
  <data name="RefundAmount" xml:space="preserve">
    <value>Devoluciones</value>
  </data>
  <data name="Renew" xml:space="preserve">
    <value>Renovar</value>
  </data>
  <data name="RetrieveAll" xml:space="preserve">
    <value>Ticket</value>
  </data>
  <data name="Returns" xml:space="preserve">
    <value>Returns</value>
  </data>
  <data name="Several" xml:space="preserve">
    <value>Varios</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="SupplierName" xml:space="preserve">
    <value>Nombre del proveedor</value>
  </data>
  <data name="TaxName" xml:space="preserve">
    <value>Nombre de impuesto</value>
  </data>
  <data name="Ticket" xml:space="preserve">
    <value>Ticket</value>
  </data>
  <data name="TicketAlreadyPaid" xml:space="preserve">
    <value>Ticket ya pagado</value>
  </data>
  <data name="TicketAmount" xml:space="preserve">
    <value>Pagado</value>
  </data>
  <data name="TicketId" xml:space="preserve">
    <value>Ticket Id</value>
  </data>
  <data name="TicketReference" xml:space="preserve">
    <value>Referencia del ticket</value>
  </data>
  <data name="TimeTable" xml:space="preserve">
    <value>Agenda</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Título</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalCharged" xml:space="preserve">
    <value>Total cobrado</value>
  </data>
  <data name="TotalRefunded" xml:space="preserve">
    <value>Total devuelto</value>
  </data>
  <data name="TotalTicket" xml:space="preserve">
    <value>Total pagado</value>
  </data>
  <data name="Until" xml:space="preserve">
    <value>Hasta</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="UserLogin" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Usuario</value>
  </data>
  <data name="VAT" xml:space="preserve">
    <value>IVA</value>
  </data>
  <data name="VatIncluding" xml:space="preserve">
    <value>P.V.P. I.V.A INCLUIDO</value>
  </data>
  <data name="CreateNonActiveConcessionException" xml:space="preserve">
    <value>No se pueden crear tickets en concesiones no activas</value>
  </data>
  <data name="PayNonActiveConcessionException" xml:space="preserve">
    <value>No se pueden pagar tickets en concesiones no activas</value>
  </data>
  <data name="UpdateNonActiveConcessionException" xml:space="preserve">
    <value>No se pueden modificar tickets en concesiones no activas</value>
  </data>
  <data name="AmountMoreThanZeroException" xml:space="preserve">
    <value>No se pueden crear tickets con importes iguales o menores de 0</value>
  </data>
  <data name="WorkerDoesntExists" xml:space="preserve">
    <value>El trabajador que está creando el ticket no existe</value>
  </data>
  <data name="Attended" xml:space="preserve">
    <value>Le atendió :</value>
  </data>
  <data name="ActiveException" xml:space="preserve">
    <value>El ticket no está activo.</value>
  </data>
  <data name="TicketActive" xml:space="preserve">
    <value>Su ticket con el total de {0} de la empresa {1} ya está activado.Lo podrá pagar hasta el {2} (UTC).</value>
    <comment>0 -&gt; ticketamount, 1 -&gt; ConcessionName , 2-&gt; ticketuntil</comment>
  </data>
  <data name="TicketActiveToday" xml:space="preserve">
    <value>Su ticket con el total de {0} de la empresa {1} será activado hoy a las {2}(UTC). Lo podrá pagar hasta el {3} (UTC).</value>
    <comment>0 -&gt; ticketamount, 1 -&gt; ConcessionName , 2 -&gt; ticketsincehour , 3 -&gt; ticketuntil</comment>
  </data>
  <data name="TicketNotFound" xml:space="preserve">
    <value>Ticket no encontrado</value>
  </data>
  <data name="TicketLastDay" xml:space="preserve">
    <value>Su ticket con el total de {0} de la empresa {1} caducará mañana. Lo podrá pagar hasta mañana a las {2}h (UTC).</value>
    <comment>0 -&gt; ticketamount, 1 -&gt; ConcessionName, 2 -&gt; ticketuntilhour</comment>
  </data>
  <data name="PromotionMoreTravel" xml:space="preserve">
    <value>PROMOCIÓN - Viajes gratis</value>
  </data>
  <data name="PromotionOther" xml:space="preserve">
    <value>PROMOCIÓN</value>
  </data>
  <data name="RefundInsufficientBalance" xml:space="preserve">
    <value>No hay suficiente saldo en el monedero para hacer la devolución</value>
  </data>
  <data name="EntranceEmailBody" xml:space="preserve">
    <value>Entranda {0}</value>
  </data>
  <data name="EntranceEmailSubject" xml:space="preserve">
    <value>Nueva entrada</value>
  </data>
  <data name="ExcedMaxAmountToSpendException" xml:space="preserve">
    <value>Su ticket excede el máximo importe para el evento</value>
  </data>
</root>